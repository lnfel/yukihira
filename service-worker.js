const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.BI5nIDi2.js",s+"/_app/immutable/nodes/0.CbGPaQ6M.js",s+"/_app/immutable/assets/0.DzzXquQM.css",s+"/_app/immutable/nodes/1.BVcRsIN4.js",s+"/_app/immutable/nodes/2.ByJXjT-z.js",s+"/_app/immutable/assets/2.CtLR6vgv.css",s+"/_app/immutable/chunks/attributes.C6oqUbTx.js",s+"/_app/immutable/chunks/disclose-version.BdZn2vBI.js",s+"/_app/immutable/chunks/entry.JQiDq0V9.js",s+"/_app/immutable/chunks/index-client.BdGKWncM.js",s+"/_app/immutable/chunks/lifecycle.Bl7f_Zys.js",s+"/_app/immutable/chunks/paths.G1JXCXiv.js",s+"/_app/immutable/chunks/runtime.BT8qFkc0.js",s+"/_app/immutable/entry/start.XXb9uIaZ.js"],u=[s+"/.nojekyll",s+"/apple-touch-icon-180x180.png",s+"/favicon.ico",s+"/favicon.png",s+"/img/bg.jpg",s+"/img/cooking-features.jpg",s+"/img/cooking-traditions.jpg",s+"/img/jean-de-lessard-izakaya-kinoya-restaurant-montreal-designboom.jpg",s+"/img/live-food.jpg",s+"/img/pagoda.png",s+"/img/sushi_2.jpg",s+"/img/sushi_3.jpg",s+"/img/sushi_4.png",s+"/img/yukihira_logo-square.png",s+"/manifest.json",s+"/maskable-icon-512x512.png",s+"/pwa-192x192.png",s+"/pwa-512x512.png",s+"/pwa-64x64.png",s+"/yukihira-logo.png"],m="1720157201886",o=`cache-${m}`,p=[...l,...u];self.addEventListener("install",a=>{async function i(){const t=await caches.open(o),n=[];p.forEach(e=>{n.push(t.add(e).catch(()=>console.error(`Can't load ${e} to cache.`)))}),await Promise.all(n)}a.waitUntil(i())});self.addEventListener("activate",a=>{async function i(){for(const t of await caches.keys())t!==o&&await caches.delete(t)}a.waitUntil(i())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function i(){const t=new URL(a.request.url),n=await caches.open(o);if(p.includes(t.pathname)){const e=await n.match(t.pathname);if(e)return e}try{const e=await fetch(a.request),c=t.protocol==="http:"||t.protocol==="https:",r=e.status===200;if(!(e instanceof Response))throw new Error("Invalid response from fetch");return c&&r&&n.put(a.request,e.clone()),e}catch{const c=await n.match(a.request);if(c)return c}return new Response("Not Found",{status:404})}a.respondWith(i())});self.addEventListener("message",a=>{a.data&&a.data.type==="SKIP_WAITING"&&self.skipWaiting()});
