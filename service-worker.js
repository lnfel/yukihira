const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/_app/immutable/entry/app.Xpof8u1K.js",s+"/_app/immutable/nodes/0.D53Wmt0R.js",s+"/_app/immutable/assets/0.BZjx08zH.css",s+"/_app/immutable/nodes/1.BAxystfd.js",s+"/_app/immutable/nodes/2.KHirVoNb.js",s+"/_app/immutable/assets/2.CtLR6vgv.css",s+"/_app/immutable/nodes/3.CPgdImsm.js",s+"/_app/immutable/assets/3.Bz9QAfJ6.css",s+"/_app/immutable/chunks/Footer.DeN7WnNo.js",s+"/_app/immutable/chunks/attributes.DrFrgjPF.js",s+"/_app/immutable/chunks/class.BR7cPGJc.js",s+"/_app/immutable/chunks/disclose-version.AEuDK3Jp.js",s+"/_app/immutable/chunks/entry.CVoafBr-.js",s+"/_app/immutable/chunks/index-client.DaGhT0Me.js",s+"/_app/immutable/chunks/lifecycle.O3WMZ-_O.js",s+"/_app/immutable/chunks/paths.B7X9lAFd.js",s+"/_app/immutable/chunks/props.DpWu57gt.js",s+"/_app/immutable/chunks/render.CLK7Brap.js",s+"/_app/immutable/chunks/runtime.D-uqQ415.js",s+"/_app/immutable/chunks/stores.CnYeeh60.js",s+"/_app/immutable/entry/start.D6BAtAnI.js"],m=[s+"/.nojekyll",s+"/apple-touch-icon-180x180.png",s+"/favicon.ico",s+"/favicon.png",s+"/img/bg.jpg",s+"/img/cooking-features.jpg",s+"/img/cooking-traditions.jpg",s+"/img/jean-de-lessard-izakaya-kinoya-restaurant-montreal-designboom.jpg",s+"/img/live-food.jpg",s+"/img/pagoda.png",s+"/img/products/ahi-poke-bowl.jpg",s+"/img/products/barqs-root-beer.png",s+"/img/products/california-roll.jpg",s+"/img/products/coconut-cooler.jpg",s+"/img/products/dr-pepper.jpg",s+"/img/products/ebi-katsudon.png",s+"/img/products/ginger-beer.jpg",s+"/img/products/karaagedon.png",s+"/img/products/katsudon.jpg",s+"/img/products/kung-pao-dragon-roll.jpg",s+"/img/products/lobster-avocado-roll.jpg",s+"/img/products/mix-katsudon.png",s+"/img/products/sakedon.png",s+"/img/products/shrimp-tempura-roll.jpg",s+"/img/products/spicy-tuna-roll.jpg",s+"/img/products/strawberry-cucumber-limeade.jpg",s+"/img/products/tendon.png",s+"/img/products/unagi-don.png",s+"/img/products/water-fiji-lrg.jpg",s+"/img/sushi_2.jpg",s+"/img/sushi_3.jpg",s+"/img/sushi_4.png",s+"/img/yukihira_logo-square.png",s+"/manifest.json",s+"/maskable-icon-512x512.png",s+"/pwa-192x192.png",s+"/pwa-512x512.png",s+"/pwa-64x64.png",s+"/yukihira-logo.png"],g="1721291993738",n=`cache-${g}`,c=[...u,...m];self.addEventListener("install",a=>{async function p(){const e=await caches.open(n),o=[];c.forEach(t=>{o.push(e.add(t).catch(()=>console.error(`Can't load ${t} to cache.`)))}),await Promise.all(o)}a.waitUntil(p())});self.addEventListener("activate",a=>{async function p(){for(const e of await caches.keys())e!==n&&await caches.delete(e)}a.waitUntil(p())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function p(){const e=new URL(a.request.url),o=await caches.open(n);if(c.includes(e.pathname)){const t=await o.match(e.pathname);if(t)return t}try{const t=await fetch(a.request),i=e.protocol==="http:"||e.protocol==="https:",r=t.status===200;if(!(t instanceof Response))throw new Error("Invalid response from fetch");return i&&r&&o.put(a.request,t.clone()),t}catch{const i=await o.match(a.request);if(i)return i}return new Response("Not Found",{status:404})}a.respondWith(p())});self.addEventListener("message",a=>{a.data&&a.data.type==="SKIP_WAITING"&&self.skipWaiting()});
