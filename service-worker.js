const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/_app/immutable/entry/app.BrTxYEnu.js",s+"/_app/immutable/nodes/0.7eo8Aj9e.js",s+"/_app/immutable/assets/0.DdWmgWF5.css",s+"/_app/immutable/nodes/1.B1unbcTn.js",s+"/_app/immutable/nodes/2.Bb3am4yO.js",s+"/_app/immutable/assets/2.CtLR6vgv.css",s+"/_app/immutable/nodes/3.DeXNnj1l.js",s+"/_app/immutable/assets/3.Bz9QAfJ6.css",s+"/_app/immutable/chunks/Footer.DCux9Nid.js",s+"/_app/immutable/chunks/attributes.DrFrgjPF.js",s+"/_app/immutable/chunks/class.BR7cPGJc.js",s+"/_app/immutable/chunks/disclose-version.AEuDK3Jp.js",s+"/_app/immutable/chunks/entry.D5JkI5Oa.js",s+"/_app/immutable/chunks/index-client.DaGhT0Me.js",s+"/_app/immutable/chunks/lifecycle.O3WMZ-_O.js",s+"/_app/immutable/chunks/paths.ChhOlEPl.js",s+"/_app/immutable/chunks/props.DpWu57gt.js",s+"/_app/immutable/chunks/render.CLK7Brap.js",s+"/_app/immutable/chunks/runtime.D-uqQ415.js",s+"/_app/immutable/chunks/stores.BS65eDam.js",s+"/_app/immutable/entry/start.BObr0ctX.js"],m=[s+"/.nojekyll",s+"/apple-touch-icon-180x180.png",s+"/favicon.ico",s+"/favicon.png",s+"/img/bg.jpg",s+"/img/cooking-features.jpg",s+"/img/cooking-traditions.jpg",s+"/img/jean-de-lessard-izakaya-kinoya-restaurant-montreal-designboom.jpg",s+"/img/live-food.jpg",s+"/img/pagoda.png",s+"/img/products/ahi-poke-bowl.jpg",s+"/img/products/barqs-root-beer.png",s+"/img/products/california-roll.jpg",s+"/img/products/coconut-cooler.jpg",s+"/img/products/dr-pepper.jpg",s+"/img/products/ebi-katsudon.png",s+"/img/products/ginger-beer.jpg",s+"/img/products/karaagedon.png",s+"/img/products/katsudon.jpg",s+"/img/products/kung-pao-dragon-roll.jpg",s+"/img/products/lobster-avocado-roll.jpg",s+"/img/products/mix-katsudon.png",s+"/img/products/sakedon.png",s+"/img/products/shrimp-tempura-roll.jpg",s+"/img/products/spicy-tuna-roll.jpg",s+"/img/products/strawberry-cucumber-limeade.jpg",s+"/img/products/tendon.png",s+"/img/products/unagi-don.png",s+"/img/products/water-fiji-lrg.jpg",s+"/img/sushi_2.jpg",s+"/img/sushi_3.jpg",s+"/img/sushi_4.png",s+"/img/yukihira_logo-square.png",s+"/manifest.json",s+"/maskable-icon-512x512.png",s+"/pwa-192x192.png",s+"/pwa-512x512.png",s+"/pwa-64x64.png",s+"/yukihira-logo.png"],g="1721292282983",i=`cache-${g}`,c=[...u,...m];self.addEventListener("install",a=>{async function n(){const t=await caches.open(i),p=[];c.forEach(e=>{p.push(t.add(e).catch(()=>console.error(`Can't load ${e} to cache.`)))}),await Promise.all(p)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t!==i&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),p=await caches.open(i);if(c.includes(t.pathname)){const e=await p.match(t.pathname);if(e)return e}try{const e=await fetch(a.request),o=t.protocol==="http:"||t.protocol==="https:",r=e.status===200;if(!(e instanceof Response))throw new Error("Invalid response from fetch");return o&&r&&p.put(a.request,e.clone()),e}catch{const o=await p.match(a.request);if(o)return o}return new Response("Not Found",{status:404})}a.respondWith(n())});self.addEventListener("message",a=>{a.data&&a.data.type==="SKIP_WAITING"&&self.skipWaiting()});
